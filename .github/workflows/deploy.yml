name: Deploy to Google App Engine

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        poetry config virtualenvs.create false
        poetry install --no-interaction
        poetry add pytest pytest-cov flake8 --group dev
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest (if tests exist)
      run: |
        if [ -d "tests" ] && [ "$(ls -A tests)" ]; then
          python -m pytest tests/ -v --cov=src/dash_mcp_showcase --cov-report=xml
        else
          echo "No tests found, skipping test step"
        fi

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
        service_account: 'github-cicd@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com'
    
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Configure gcloud for App Engine
      run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud auth configure-docker
    
    
    - name: Deploy to App Engine
      run: |
        gcloud app deploy app-production.yaml --quiet --promote --stop-previous-version
    
    - name: Show deployment URL
      run: |
        echo "Application deployed to: https://dash-mcp-showcase-dot-${{ secrets.GCP_PROJECT_ID }}.nw.r.appspot.com"
        gcloud app browse --service=dash-mcp-showcase --no-launch-browser

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "‚úÖ Deployment successful!"
          echo "üöÄ App is live at: https://${{ secrets.GCP_PROJECT_ID }}.nw.r.appspot.com"
        elif [ "${{ needs.deploy.result }}" == "failure" ]; then
          echo "‚ùå Deployment failed!"
          exit 1
        else
          echo "‚ÑπÔ∏è Deployment was skipped (not main branch or PR)"
        fi
